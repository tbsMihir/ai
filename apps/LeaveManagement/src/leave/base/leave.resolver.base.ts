/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import * as graphql from "@nestjs/graphql";
import { GraphQLError } from "graphql";
import { isRecordNotFoundError } from "../../prisma.util";
import { MetaQueryPayload } from "../../util/MetaQueryPayload";
import { Leave } from "./Leave";
import { LeaveCountArgs } from "./LeaveCountArgs";
import { LeaveFindManyArgs } from "./LeaveFindManyArgs";
import { LeaveFindUniqueArgs } from "./LeaveFindUniqueArgs";
import { DeleteLeaveArgs } from "./DeleteLeaveArgs";
import { LeaveService } from "../leave.service";
@graphql.Resolver(() => Leave)
export class LeaveResolverBase {
  constructor(protected readonly service: LeaveService) {}

  async _leavesMeta(
    @graphql.Args() args: LeaveCountArgs
  ): Promise<MetaQueryPayload> {
    const result = await this.service.count(args);
    return {
      count: result,
    };
  }

  @graphql.Query(() => [Leave])
  async leaves(@graphql.Args() args: LeaveFindManyArgs): Promise<Leave[]> {
    return this.service.leaves(args);
  }

  @graphql.Query(() => Leave, { nullable: true })
  async leave(
    @graphql.Args() args: LeaveFindUniqueArgs
  ): Promise<Leave | null> {
    const result = await this.service.leave(args);
    if (result === null) {
      return null;
    }
    return result;
  }

  @graphql.Mutation(() => Leave)
  async deleteLeave(
    @graphql.Args() args: DeleteLeaveArgs
  ): Promise<Leave | null> {
    try {
      return await this.service.deleteLeave(args);
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new GraphQLError(
          `No resource was found for ${JSON.stringify(args.where)}`
        );
      }
      throw error;
    }
  }
}
